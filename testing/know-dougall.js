eval("//# sourceURL=assets/ember-cli/loader.js");

;eval("define(\"know-dougall/adapters/application\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.ActiveModelAdapter.extend({\n    	namespace: \'api\',\n    	host: \'https://localhost:3000\'\n    });\n  });//# sourceURL=know-dougall/adapters/application.js");

;eval("define(\"know-dougall/adapters/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.ActiveModelAdapter.extend({\n    	host: \'https://localhost:5000\'\n    });\n  });//# sourceURL=know-dougall/adapters/user.js");

;eval("define(\"know-dougall/app\", \n  [\"ember\",\"ember/resolver\",\"ember/load-initializers\",\"exports\"],\n  function(__dependency1__, __dependency2__, __dependency3__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    var Resolver = __dependency2__[\"default\"];\n    var loadInitializers = __dependency3__[\"default\"];\n\n    Ember.MODEL_FACTORY_INJECTIONS = true;\n\n    var App = Ember.Application.extend({\n      modulePrefix: \'know-dougall\', // TODO: loaded via config\n      Resolver: Resolver\n    });\n\n    loadInitializers(App, \'know-dougall\');\n\n    __exports__[\"default\"] = App;\n  });//# sourceURL=know-dougall/app.js");

;eval("define(\"know-dougall/components/copyable-text\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    	classNames: [\'copyable\', \'copyable-text\'],\n    	classNameBindings: [\'justCoppied\'],\n    	tagName: \'div\',\n    	attributeBindings: [\'text:data-clipboard-text\'],\n\n    	justCoppied: false,\n\n    	click: function () {\n    		var _this = this\n    		this.set(\'justCoppied\', true);\n    		setTimeout(function () {\n    			_this.set(\'justCoppied\', false);\n    		}, 400);\n    	},\n\n    	text: function () {\n    		return this.get(\'text\');\n    	}.property(\'text\'),\n\n    	didInsertElement: function () {\n    		var client = new ZeroClipboard( document.getElementsByClassName(\"copyable\") );\n\n    		client.on( \"ready\", function( readyEvent ) {\n\n    		  client.on( \"aftercopy\", function( event ) {\n\n    		  } );\n    		} );\n    	}\n\n    });\n  });//# sourceURL=know-dougall/components/copyable-text.js");

;eval("define(\"know-dougall/components/friends-graph\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    	classNames: [\'friends-graph\'],\n\n    	width: function () {\n    		return this.$().width();\n    	}.property(),\n\n    	height: function () {\n    		return this.$().height();\n    	}.property(),\n\n    	nodes: function () {\n    		var user = this.get(\'user\');\n    		var nodes = this.get(\'connections\').toArray();\n    		nodes.unshiftObject(user);\n    		return nodes\n    	}.property(\'user\', \'connections.@each\'),\n\n    	links: function () {\n    		return this.get(\'nodes\').map( function (node, i) {\n    			return { source: 0, target: i, affinity: 100 }\n    		});\n    	}.property(\'nodes\'),\n\n    	largest_affinity: function () {\n    		return d3.max(this.get(\'links\'), function(d) { return d.affinity; })\n    	}.property(\'links.@each.affinity\'),\n\n    	link_distance_scale: function () {\n    		var affinity = this.get(\'largest_affinity\');\n    		return d3.scale.linear()\n    		.domain([0, affinity])\n    		.range([300, 50]);\n    	},\n\n\n    	buildGraph: function () {\n\n    		var width = this.get(\'width\'),\n    		    height = this.get(\'height\'),\n    		    nodes = this.get(\'nodes\'),\n    		    links = this.get(\'links\'),\n    		    root,\n    		    user,\n    		    users;\n\n    		var context = this\n    		var affinity = this.get(\'largest_affinity\');\n\n    		var link_distance = d3.scale.linear()\n    				.domain([0, affinity])\n    				.range([300, 50]);	\n\n    		var force = d3.layout.force()\n    		    .nodes(nodes)\n    		    .links(links)\n    		    .size([width, height])\n    		    .charge(-500)\n    		    .linkDistance(function(d) { return link_distance(d.affinity) })\n    		    .linkStrength(0.5)\n    		    .on(\"tick\", tick)\n    		    .start();\n\n    		var svg = d3.select(\"#\" + this.get(\'elementId\')).append(\"svg\")\n    		    .attr(\"width\", width)\n    		    .attr(\"height\", height);\n\n    		var link = svg.selectAll(\".link\")\n    		      .data(links)\n    		    .enter().append(\"line\")\n    		      .attr(\"class\", \"link\")\n    		      .attr(\"stroke-opacity\", 0);\n\n    		var node = svg.selectAll(\".node\")\n    		      .data(nodes)\n    		    .enter().append(\"g\")\n    		      .attr(\"class\", \"node\")\n    		      .attr(\"r\", 4.5)\n    		      .attr(\"fill\", \'orange\')\n    		      .call(force.drag);\n\n    		var image = node.append(\"image\")\n    		      .attr(\"xlink:href\", function(d) {return d.get(\'pictureUrl\');} )\n    		      .attr(\"x\", -25)\n    		      .attr(\"y\", -25)      \n    		      .attr(\"width\", 50)\n    		      .attr(\"height\", 50)\n    		      .attr(\"data-id\", function(d) { return d.get(\'id\') })\n    		      .style(\"opacity\", 0);\n\n    		  image\n    			    .transition()\n    			    .duration(1500)\n    			    .style(\"opacity\", 0.75);\n\n\n    		  image.on(\"mouseover\", function() {\n    					context.mouseoverCallback(this, node);\n    		    });  	  \n    		    \n    		  image.on(\"mouseout\", function() {\n    		  	context.mouseoutCallback(this, node);\n    	    });\n\n    		function tick() {\n    		  link.attr(\"x1\", function(d) { return d.source.x; })\n    		      .attr(\"y1\", function(d) { return d.source.y; })\n    		      .attr(\"x2\", function(d) { return d.target.x; })\n    		      .attr(\"y2\", function(d) { return d.target.y; });\n    			node.attr(\"transform\", function(d) { \n    				return \"translate(\" + d.x + \",\" + d.y + \")\"; \n    			});\n    		}\n\n    	},\n\n    	mouseoverCallback: function (mouseoverNode, allNodes) {\n    		var sc = this.findConnFromNode(mouseoverNode);\n    		this.set(\'selectedConnection\', sc);\n\n        d3.select(mouseoverNode).transition()\n          .style(\"opacity\", 1)  	          \n          .duration(100); \n    	},\n\n    	mouseoutCallback: function (mouseoverNode, allNodes) {\n    		this.set(\'selectedConnection\', null);\n    	  d3.select(mouseoverNode).transition()\n    		  .style(\"opacity\", 0.75)\n    		  .duration(100);\n    	},\n\n    	findConnFromNode: function (node) {\n    		var id = $(node).data(\'id\').toString();\n    		return this.get(\'connections\').findBy(\'id\', id);\n    	},\n\n    	selectedConnectionChange: function () {\n    		var sc = this.get(\'selectedConnection\');\n    		this.sendAction(\'selectedConnectionChanged\', sc);\n    	}.observes(\'selectedConnection\'),\n\n    	didInsertElement: function () {\n    		this.buildGraph();\n    	}\n\n    });\n  });//# sourceURL=know-dougall/components/friends-graph.js");

;eval("define(\"know-dougall/components/hoverable-element\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    	classNameBindings: [\'hovering\'],\n    	hovering: false,\n\n    	mouseEnter: function () {\n    		this.set(\'hovering\', true);\n    		this.sendAction(\'enter\');\n    	},\n\n    	mouseLeave: function () {\n    		this.set(\'hovering\', false);\n    		this.sendAction(\'leave\');\n    	}\n\n    });\n  });//# sourceURL=know-dougall/components/hoverable-element.js");

;eval("define(\"know-dougall/components/linkedin-login\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    	classNames: [\'linkedin-login\'],\n\n    	// href: function () {\n    	// 	_this = this\n    	// 	link = this.domain + \'?\'\n    	// 	[\'response_type\', \'response_type\', \'client_id\', \'state\', \'redirect_uri\'].forEach( function (param) {\n    	// 		link = link + param + _this[param] + \'&\'\n    	// 	}).slice(0, -1);\n    	// },\n\n    	// domain: \"https://www.linkedin.com/uas/oauth2/authorization\",\n    	// response_type: \"code\",\n    	// client_id: \"77g0bc95ranwgc\", // should move to an env var\n    	// state: \'must-improve-security\' // this will end up being dynamic and getting passed to the consuming server for validation\n    	// redirect_uri: \"https://localhost:5000/auth/linkedin/callback\"\n\n\n    	href: \"https://www.linkedin.com/uas/oauth2/authorization?response_type=code&client_id=77g0bc95ranwgc&state=DCEEFWF45453sdffef424&redirect_uri=https://localhost:5000/sessions/linkedin\",\n\n\n\n    	click: function () {\n    		window.location = this.get(\'href\');\n    	}\n\n    });\n  });//# sourceURL=know-dougall/components/linkedin-login.js");

;eval("define(\"know-dougall/components/menu-bar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n\n    	closed: false,\n\n    	click: function () {\n    		var el = $(\'.menu-container\');\n    		if (this.get(\'closed\')) {\n    			el.find(\'.close\').addClass(\'hidden\');\n    			setTimeout( function () { el.find(\'.full\').removeClass(\'hidden\') }, 100);\n    			this.set(\'closed\', false);\n    			this.sendAction(\'close\');\n    		} else {\n    			el.find(\'.full\').addClass(\'hidden\')\n    			setTimeout( function () { el.find(\'.close\').removeClass(\'hidden\') }, 100);\n    			this.set(\'closed\', true);\n    			this.sendAction(\'open\');\n    		}\n    	}\n\n    });\n  });//# sourceURL=know-dougall/components/menu-bar.js");

;eval("define(\"know-dougall/components/new-annotation\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n\n    	resetForm: function () {\n    		// this.$().find(\'.annotation-form\').focus();\n    		this.$().find(\'.link-name\').val(\'\');\n    	},\n\n    	actions: {\n    		submitAnnotation: function () {\n    			this.sendAction(\'action\', this.get(\'annotation\'));\n    			this.resetForm();\n    		}\n    	}\n\n    });\n  });//# sourceURL=know-dougall/components/new-annotation.js");

;eval("define(\"know-dougall/components/personal-logo\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    	tagName: \'img\',\n    	attributeBindings: [\'src\'],\n    	src: \'/assets/images/orange_robot_2.svg\',\n    	classNames: [\'personal-logo\']\n    });\n  });//# sourceURL=know-dougall/components/personal-logo.js");

;eval("define(\"know-dougall/components/post-display\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n\n    	tagName: \'a\',\n\n    	click: function () {\n    		this.sendAction(\'action\', this.get(\'post\'));\n    	},\n\n    	actions: {\n    		showPostDetails: function () {\n    			console.log(\'dougs\');\n    		},\n    		hidePostDetails: function () {\n    			console.log(\'other dougs\');\n    		}\n    	}\n    });\n  });//# sourceURL=know-dougall/components/post-display.js");

;eval("define(\"know-dougall/components/show-annotation\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n    });\n  });//# sourceURL=know-dougall/components/show-annotation.js");

;eval("define(\"know-dougall/components/time-formatter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Component.extend({\n\n    	formattedTime: function () {\n    		var time = this.get(\'time\')\n    		return moment(time).format(\'MMMM Do YYYY\')\n    	}.property(\'time\')\n\n    });\n  });//# sourceURL=know-dougall/components/time-formatter.js");

;eval("define(\"know-dougall/controllers/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	needs: [\'friends-graph/show\', \'friends-graph/index\', \'posts/index\', \'posts/show\', \'posts/new\', \'posts/edit\', \'application\'],\n\n    	getPropertyValue: function (propertyName) {\n    		var currentPath = this.get(\'currentPath\').replace(\".\", \"/\")\n    		return this.get(\'controllers.\' + currentPath +  \'.\' + propertyName)\n    	},\n\n    	controllerSpecificProperties: [\'navLinks\', \'leftSidebarClass\'],\n\n    	setControllerSpecificProperties: function () {\n    		console.log(\'testing\');\n    		var context = this\n    		this.get(\'controllerSpecificProperties\').forEach( function (prop) {\n    			var val = context.getPropertyValue(prop)\n    			context.set(prop, val);\n    		});\n    	}.observes(\'currentPath\')\n\n    });\n  });//# sourceURL=know-dougall/controllers/application.js");

;eval("define(\"know-dougall/controllers/friends-graph\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	augmentLeftSidebarStyle: \'friends-graph\',\n\n    	chosenConnection: null,\n\n    	connectionBeingViewed: function () {\n    		return this.get(\'chosenConnection\') || \n    		       this.get(\'content\')\n    	}.property(\'chosenConnection\'),\n\n    });\n  });//# sourceURL=know-dougall/controllers/friends-graph.js");

;eval("define(\"know-dougall/controllers/friends-graph/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n    	navLinks: function () {\n    		return [\n    			{\n    				name: \'New\',\n    				route: \'posts.new\'\n    			}, {\n    				name: \'Index\',\n    				route: \'posts.index\'\n    			}\n    		]\n    	}.property(),\n\n    	leftSidebarClass: \'friends-graph\'\n    });\n  });//# sourceURL=know-dougall/controllers/friends-graph/index.js");

;eval("define(\"know-dougall/controllers/friends-graph/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    	navLinks: function () {\n    		return [\n    			{\n    				name: \'Friends Graph\',\n    				route: \'friends-graph.index\'\n    			},\n    			{\n    				name: \'New\',\n    				route: \'posts.new\'\n    			}, {\n    				name: \'Index\',\n    				route: \'posts.index\'\n    			}\n    		]\n    	}.property(),\n\n    	leftSidebarClass: \'friends-graph\'\n    });\n  });//# sourceURL=know-dougall/controllers/friends-graph/show.js");

;eval("define(\"know-dougall/controllers/posts\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Controller.extend({\n\n    });\n  });//# sourceURL=know-dougall/controllers/posts.js");

;eval("define(\"know-dougall/controllers/posts/edit\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n    	navLinks: function () {\n    		return [\n    			{\n    				name: \'Friends Graph\',\n    				route: \'friends-graph.index\'\n    			},\n    			{\n    				name: \'New\',\n    				route: \'posts.new\'\n    			}, {\n    				name: \'Index\',\n    				route: \'posts.index\'\n    			}\n    		]\n    	}.property()\n    });\n  });//# sourceURL=know-dougall/controllers/posts/edit.js");

;eval("define(\"know-dougall/controllers/posts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ArrayController.extend({\n    	posts: function () {\n    		return this.get(\'content\').sortBy(\'createdAt\');\n    	}.property(\'content\'),\n\n    	navLinks: function () {\n    		return [\n    			{\n    				name: \'Friends Graph\',\n    				route: \'friends-graph.index\'\n    			},\n    			{\n    				name: \'New\',\n    				route: \'posts.new\'\n    			}\n    		]\n    	}.property()\n\n    });\n  });//# sourceURL=know-dougall/controllers/posts/index.js");

;eval("define(\"know-dougall/controllers/posts/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	navLinks: function () {\n    		return [\n    			{\n    				name: \'Friends Graph\',\n    				route: \'friends-graph.index\'\n    			},\n    			{\n    				name: \'Index\',\n    				route: \'posts.index\'\n    			}\n    		]\n    	}.property(),\n\n    	newAnnotation: function () {\n    		return this.store.createRecord(\'annotation\');\n    	}.property(),\n\n    	annotations: [],\n\n    	actions: {\n    		submitAnnotation: function (annotation) {\n    			var _this = this\n    			annotation.save().then(function (annotation) {\n    				var annotations = _this.get(\'annotations\');\n    				annotations.pushObject(annotation);\n    				_this.set(\'annotations\', annotations);\n    				_this.set(\'newAnnotation\', _this.store.createRecord(\'annotation\'));			\n    			});\n    		}\n    	}\n\n    });\n  });//# sourceURL=know-dougall/controllers/posts/new.js");

;eval("define(\"know-dougall/controllers/posts/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.ObjectController.extend({\n\n    	navLinks: function () {\n\n    		return [\n    			{\n    				name: \'Friends Graph\',\n    				route: \'friends-graph.index\'\n    			},\n    			{\n    				name: \'Edit\',\n    				route: \'posts.edit\',\n    				model: this\n    			}, {\n    				name: \'New\',\n    				route: \'posts.new\'\n    			}, {\n    				name: \'Index\',\n    				route: \'posts.index\'\n    			}\n    		]\n\n    	}.property(),\n\n    	actions: {\n    		showAnnotation: function (id) {\n    			var ann = this.store.find(\'annotation\', id);\n    			this.set(\'currentAnnotation\', ann);\n    		}\n    	}\n\n    });\n  });//# sourceURL=know-dougall/controllers/posts/show.js");

;eval("define(\"know-dougall/models/annotation\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n      entry: DS.attr(\'string\'),\n      name: DS.attr(\'string\'),\n      post: DS.belongsTo(\'post\'),\n      formattedEntry: DS.attr(\'string\'),\n\n      link: function () {\n      	return \"BBB  \" + this.get(\'id\') + \"  || \" + this.get(\'name\') + \"   EEE\"\n      }.property(\'id\', \'name\')\n\n    });\n  });//# sourceURL=know-dougall/models/annotation.js");

;eval("define(\"know-dougall/models/connected-user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n    	firstName: DS.attr(\'string\'),\n    	lastName: DS.attr(\'string\'),\n    	headline: DS.attr(\'string\'),\n    	linkedinProfileUrl: DS.attr(\'string\'),\n    	createdAt: DS.attr(\'date\'),\n    	updatedAt: DS.attr(\'date\'),\n    	linkedinId: DS.attr(\'string\'),\n    	industry: DS.attr(\'string\'),\n    	distance: DS.attr(\'number\'),\n    	numConnections: DS.attr(\'number\'),\n    	pictureUrl: DS.attr(\'string\'),\n    	largePictureUrl: DS.attr(\'string\'),\n    	email: DS.attr(\'string\'), \n    	user: DS.belongsTo(\'user\')\n    });\n  });//# sourceURL=know-dougall/models/connected-user.js");

;eval("define(\"know-dougall/models/post\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n    	entry: DS.attr(\'string\'),\n    	topic: DS.attr(\'string\'),\n    	title: DS.attr(\'string\'),\n    	createdAt: DS.attr(\'date\'),\n    	formattedEntry: DS.attr(\'string\'),\n    	summary: DS.attr(\'string\'),\n    	viewable: DS.attr(\'boolean\'),\n    	annotations: DS.hasMany(\'annotation\')\n    });\n  });//# sourceURL=know-dougall/models/post.js");

;eval("define(\"know-dougall/models/user\", \n  [\"ember-data\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var DS = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = DS.Model.extend({\n    	firstName: DS.attr(\'string\'),\n    	lastName: DS.attr(\'string\'),\n    	headline: DS.attr(\'string\'),\n    	linkedinProfileUrl: DS.attr(\'string\'),\n    	createdAt: DS.attr(\'date\'),\n    	updatedAt: DS.attr(\'date\'),\n    	linkedinId: DS.attr(\'string\'),\n    	industry: DS.attr(\'string\'),\n    	distance: DS.attr(\'number\'),\n    	numConnections: DS.attr(\'number\'),\n    	pictureUrl: DS.attr(\'string\'),\n    	largePictureUrl: DS.attr(\'string\'),\n    	email: DS.attr(\'string\'), \n    	connectedUsers: DS.hasMany(\'connectedUser\')\n    });\n  });//# sourceURL=know-dougall/models/user.js");

;eval("define(\"know-dougall/router\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    var Router = Ember.Router.extend({\n      location: KnowDougallENV.locationType\n    });\n\n    Router.map(function() {\n      this.resource(\"home\", { path: \'/\'} );\n      this.resource(\'posts\', function() {\n      	this.route(\'index\');\n      	this.route(\'new\');\n      	this.route(\'show\', { path: \'/:post_id\' });\n      	this.route(\'edit\', { path: \'/:post_id/edit\' });\n      });\n      this.resource(\'me\', function() {\n        this.route(\'resume\');\n        this.route(\'ruby\');\n        this.route(\'ember\');\n        this.route(\'data\');\n      });\n      this.resource(\'friends-graph\', function () {\n        this.route(\'show\', { path: \'/:linkedin_id\' });\n      });\n\n      this.route(\'application\');\n    });\n\n    __exports__[\"default\"] = Router;\n  });//# sourceURL=know-dougall/router.js");

;eval("define(\"know-dougall/routes/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n    	actions: {\n    		openMenu: function () {\n    			$(\'.nav-menu\').addClass(\'shown\');\n    		},\n    		closeMenu: function () {\n    			$(\'.nav-menu\').removeClass(\'shown\');\n    		}\n    	}\n\n    });\n  });//# sourceURL=know-dougall/routes/application.js");

;eval("define(\"know-dougall/routes/friends-graph\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function () {\n    		return this.store.find(\'user\', 1)\n    	},\n\n    	actions: {\n    		setChosenConnection: function (connection) {\n    			this.get(\'controller\').set(\'chosenConnection\', connection);\n    		}\n    	}\n\n    });\n  });//# sourceURL=know-dougall/routes/friends-graph.js");

;eval("define(\"know-dougall/routes/friends-graph/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	model: function (params) {\n    		return this.store.find(\'user\', params.linkedin_id)\n    	}	\n    });\n  });//# sourceURL=know-dougall/routes/friends-graph/show.js");

;eval("define(\"know-dougall/routes/posts\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({	\n\n    	actions: {\n    		submitPost: function (post) {\n    			var _this = this;\n    			var onSuccess = function() { _this.transitionTo(\'posts.show\', post); };\n    			var onFail    = function() { _this.get(\'controller\').set(\'unsuccessfulPost\', true); };\n    			post.save().then(onSuccess, onFail);\n    		}\n    	}\n    	\n    });\n  });//# sourceURL=know-dougall/routes/posts.js");

;eval("define(\"know-dougall/routes/posts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n    	\n    	model: function () {\n    		return this.store.find(\'post\');\n    	},\n\n    	actions: {\n    		choosePost: function (post) {\n    			this.transitionTo(\'posts.show\', post)\n    		}\n    	}\n\n    });\n  });//# sourceURL=know-dougall/routes/posts/index.js");

;eval("define(\"know-dougall/routes/posts/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.Route.extend({\n\n    	model: function () {\n    		return this.store.createRecord(\'post\');\n    	},\n\n    	actions: {\n    		submitPost: function (post) {\n    			var _this = this;\n    			var onFail    = function() { _this.get(\'controller\').set(\'unsuccessfulPost\', true); console.log(\'failing\'); };\n    			var onSuccess = function() { \n    				Promise.all([\n    					_this.get(\'controller.annotations\').forEach( function (annotation) {\n    						annotation.set(\'post\', post);\n    						console.log(\'saving\');\n    						annotation.save();\n    					})]\n    				).then(function () {\n    					_this.transitionTo(\'posts.show\', post);\n    				});\n    			};\n\n    			post.save().then(onSuccess, onFail);\n\n    		}\n    	}\n    });\n  });//# sourceURL=know-dougall/routes/posts/new.js");

;eval("define(\"know-dougall/templates/application\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<div \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'class\': (\"leftSidebarClass :left-sidebar\")\n      },hashTypes:{\'class\': \"STRING\"},hashContexts:{\'class\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n	\");\n      stack1 = helpers._triageMustache.call(depth0, \"personal-logo\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'menu-bar\'] || (depth0 && depth0[\'menu-bar\']),options={hash:{\n        \'open\': (\"openMenu\"),\n        \'close\': (\"closeMenu\"),\n        \'links\': (\"navLinks\")\n      },hashTypes:{\'open\': \"STRING\",\'close\': \"STRING\",\'links\': \"ID\"},hashContexts:{\'open\': depth0,\'close\': depth0,\'links\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"menu-bar\", options))));\n      data.buffer.push(\"\\n</div>\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/application.js");

;eval("define(\"know-dougall/templates/components/copyable-text\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/components/copyable-text.js");

;eval("define(\"know-dougall/templates/components/hoverable-element\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"content\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/components/hoverable-element.js");

;eval("define(\"know-dougall/templates/components/menu-bar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"link.model\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(5, program5, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n			<li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0,depth0],types:[\"ID\",\"ID\"],data:data},helper ? helper.call(depth0, \"link.route\", \"link.model\", options) : helperMissing.call(depth0, \"link-to\", \"link.route\", \"link.model\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n		\");\n      return buffer;\n      }\n    function program3(depth0,data) {\n      \n      var stack1;\n      stack1 = helpers._triageMustache.call(depth0, \"link.name\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      else { data.buffer.push(\'\'); }\n      }\n\n    function program5(depth0,data) {\n      \n      var buffer = \'\', stack1, helper, options;\n      data.buffer.push(\"\\n			<li>\");\n      stack1 = (helper = helpers[\'link-to\'] || (depth0 && depth0[\'link-to\']),options={hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(3, program3, data),contexts:[depth0],types:[\"ID\"],data:data},helper ? helper.call(depth0, \"link.route\", options) : helperMissing.call(depth0, \"link-to\", \"link.route\", options));\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n		\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<div class=\'menu-container\'>\\n	<div class=\'menu full\'></div>\\n	<div class=\'menu three\'></div>\\n	<div class=\'menu close hidden\'></div>\\n</div>\\n\\n<div class=\'nav-menu\'>\\n	<ul>\\n	\");\n      stack1 = helpers.each.call(depth0, \"link\", \"in\", \"links\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</ul>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/components/menu-bar.js");

;eval("define(\"know-dougall/templates/components/new-annotation\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<form class=\'annotation-form\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"submitAnnotation\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"ID\"},hashContexts:{\'on\': depth0},contexts:[depth0],types:[\"STRING\"],data:data})));\n      data.buffer.push(\">\\n	<title>link-name</title>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'value\': (\"annotation.name\"),\n        \'class\': (\"link-name\")\n      },hashTypes:{\'value\': \"ID\",\'class\': \"STRING\"},hashContexts:{\'value\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n\\n	<title>body</title>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'value\': (\"annotation.entry\")\n      },hashTypes:{\'value\': \"ID\"},hashContexts:{\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n	<button type=\\\"submit\\\">Submit</button>\\n</form>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/components/new-annotation.js");

;eval("define(\"know-dougall/templates/components/post-display\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div class=\'title\'>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'hoverable-element\'] || (depth0 && depth0[\'hoverable-element\']),options={hash:{\n        \'content\': (\"post.title\"),\n        \'enter\': (\"showPostDetails\"),\n        \'leave\': (\"hidePostDetails\")\n      },hashTypes:{\'content\': \"ID\",\'enter\': \"STRING\",\'leave\': \"STRING\"},hashContexts:{\'content\': depth0,\'enter\': depth0,\'leave\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"hoverable-element\", options))));\n      data.buffer.push(\"\\n</div>\\n\\n<div class=\'post-details\'>\\n	<div class=\'topic\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"post.topic\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n	<div class=\'date\'>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-formatter\'] || (depth0 && depth0[\'time-formatter\']),options={hash:{\n        \'time\': (\"post.createdAt\")\n      },hashTypes:{\'time\': \"ID\"},hashContexts:{\'time\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"time-formatter\", options))));\n      data.buffer.push(\"</div>\\n</div>\\n\\n\\n<div class=\'summary\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"post.summary\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"checkbox\"),\n        \'name\': (\"viewable\"),\n        \'checked\': (\"viewable\")\n      },hashTypes:{\'type\': \"STRING\",\'name\': \"STRING\",\'checked\': \"ID\"},hashContexts:{\'type\': depth0,\'name\': depth0,\'checked\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/components/post-display.js");

;eval("define(\"know-dougall/templates/components/show-annotation\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<div>\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"annotation.title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'copyable-text\'] || (depth0 && depth0[\'copyable-text\']),options={hash:{\n        \'text\': (\"annotation.link\")\n      },hashTypes:{\'text\': \"ID\"},hashContexts:{\'text\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"copyable-text\", options))));\n      data.buffer.push(\"\\n</div>\\n<div>\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"annotation.formattedEntry\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/components/show-annotation.js");

;eval("define(\"know-dougall/templates/components/time-formatter\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      stack1 = helpers._triageMustache.call(depth0, \"formattedTime\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/components/time-formatter.js");

;eval("define(\"know-dougall/templates/friends-graph\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, escapeExpression=this.escapeExpression, self=this, helperMissing=helpers.helperMissing;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n	\");\n      stack1 = helpers[\'if\'].call(depth0, \"largePictureUrl\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.program(4, program4, data),fn:self.program(2, program2, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	<ul>\\n		<li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"firstName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" \");\n      stack1 = helpers._triageMustache.call(depth0, \"lastName\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n		<li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"headline\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n		<li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"industry\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</li>\\n		\");\n      stack1 = helpers[\'if\'].call(depth0, \"numConnections\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(6, program6, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</ul>\\n\");\n      return buffer;\n      }\n    function program2(depth0,data) {\n      \n      var buffer = \'\';\n      data.buffer.push(\"\\n		<img \");\n      data.buffer.push(escapeExpression(helpers[\'bind-attr\'].call(depth0, {hash:{\n        \'src\': (\"largePictureUrl\")\n      },hashTypes:{\'src\': \"ID\"},hashContexts:{\'src\': depth0},contexts:[],types:[],data:data})));\n      data.buffer.push(\">\\n	\");\n      return buffer;\n      }\n\n    function program4(depth0,data) {\n      \n      \n      data.buffer.push(\"\\n		<div>Hang on, we\'re still getting these images.</div>\\n	\");\n      }\n\n    function program6(depth0,data) {\n      \n      var buffer = \'\', stack1;\n      data.buffer.push(\"\\n			<li>\");\n      stack1 = helpers._triageMustache.call(depth0, \"numConnections\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\" connections</li>\\n		\");\n      return buffer;\n      }\n\n      stack1 = helpers._triageMustache.call(depth0, \"linkedin-login\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'friends-graph\'] || (depth0 && depth0[\'friends-graph\']),options={hash:{\n        \'user\': (\"content\"),\n        \'connections\': (\"content.connectedUsers\"),\n        \'selectedConnectionChanged\': (\"setChosenConnection\")\n      },hashTypes:{\'user\': \"ID\",\'connections\': \"ID\",\'selectedConnectionChanged\': \"STRING\"},hashContexts:{\'user\': depth0,\'connections\': depth0,\'selectedConnectionChanged\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"friends-graph\", options))));\n      data.buffer.push(\"\\n\\n<div class=\'friends-graph-sidebar\'>\\n\");\n      stack1 = helpers[\'with\'].call(depth0, \"connectionBeingViewed\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/friends-graph.js");

;eval("define(\"know-dougall/templates/friends-graph/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\';\n\n\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/friends-graph/show.js");

;eval("define(\"know-dougall/templates/home\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h1>HOME</h1>\\n\\nI\'ve been mostly self taught, and I\'ve had a couple jobs working in Rails and Ember.  Due to the awesome Ruby community I was able to find my way to an a couple of jobs and get my feet somewhat firmly grounded in the craft.  However I wasn\'t getting very well rounded as programmer.  I eventually got an internship at Big Nerd Ranch and found myself surrounded by amazing programmers that were more than willing to teach me what they know.\\n\\n\\nI think I have a unique perspective.  Having worked for a while on production apps without anyone to help me through the dificault times made me really hungry of experienced help.  I can starkly see the contrast between not knowing what you\'re doing and doing it in a professional way.  \\n\\nA lot of this blog is about me sharing that learning to the world.\");\n      \n    });\n  });//# sourceURL=know-dougall/templates/home.js");

;eval("define(\"know-dougall/templates/posts\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1;\n\n\n      data.buffer.push(\"<div class=\'posts-container\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"outlet\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</div>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/posts.js");

;eval("define(\"know-dougall/templates/posts/edit\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts/post-form\", options) : helperMissing.call(depth0, \"partial\", \"posts/post-form\", options))));\n      \n    });\n  });//# sourceURL=know-dougall/templates/posts/edit.js");

;eval("define(\"know-dougall/templates/posts/index\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n		<li>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'post-display\'] || (depth0 && depth0[\'post-display\']),options={hash:{\n        \'post\': (\"post\"),\n        \'action\': (\"choosePost\")\n      },hashTypes:{\'post\': \"ID\",\'action\': \"STRING\"},hashContexts:{\'post\': depth0,\'action\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"post-display\", options))));\n      data.buffer.push(\"</li>\\n	\");\n      return buffer;\n      }\n\n      data.buffer.push(\"<ul class=\'posts-list\'>\\n	\");\n      stack1 = helpers.each.call(depth0, \"post\", \"in\", \"posts\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n</ul>\\n\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/posts/index.js");

;eval("define(\"know-dougall/templates/posts/new\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;\n\n    function program1(depth0,data) {\n      \n      var buffer = \'\', helper, options;\n      data.buffer.push(\"\\n			<li>\");\n      data.buffer.push(escapeExpression((helper = helpers[\'show-annotation\'] || (depth0 && depth0[\'show-annotation\']),options={hash:{\n        \'annotation\': (\"annotation\")\n      },hashTypes:{\'annotation\': \"ID\"},hashContexts:{\'annotation\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"show-annotation\", options))));\n      data.buffer.push(\"</li>\\n		\");\n      return buffer;\n      }\n\n      data.buffer.push(escapeExpression((helper = helpers.partial || (depth0 && depth0.partial),options={hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"STRING\"],data:data},helper ? helper.call(depth0, \"posts/post-form\", options) : helperMissing.call(depth0, \"partial\", \"posts/post-form\", options))));\n      data.buffer.push(\"\\n<div class=\'posts-right-sidebar\'>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers[\'new-annotation\'] || (depth0 && depth0[\'new-annotation\']),options={hash:{\n        \'annotation\': (\"newAnnotation\"),\n        \'action\': (\"submitAnnotation\")\n      },hashTypes:{\'annotation\': \"ID\",\'action\': \"STRING\"},hashContexts:{\'annotation\': depth0,\'action\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"new-annotation\", options))));\n      data.buffer.push(\"\\n	<ul>\\n		\");\n      stack1 = helpers.each.call(depth0, \"annotation\", \"in\", \"annotations\", {hash:{},hashTypes:{},hashContexts:{},inverse:self.noop,fn:self.program(1, program1, data),contexts:[depth0,depth0,depth0],types:[\"ID\",\"ID\",\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"\\n	</ul>\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/posts/new.js");

;eval("define(\"know-dougall/templates/posts/post-form\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', helper, options, escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;\n\n\n      data.buffer.push(\"<form class=\'post-form\' \");\n      data.buffer.push(escapeExpression(helpers.action.call(depth0, \"submitPost\", \"content\", {hash:{\n        \'on\': (\"submit\")\n      },hashTypes:{\'on\': \"STRING\"},hashContexts:{\'on\': depth0},contexts:[depth0,depth0],types:[\"STRING\",\"ID\"],data:data})));\n      data.buffer.push(\" >\\n\\n	<label>Title</label>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"title\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'type\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n\\n	<label>Topic</label>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.input || (depth0 && depth0.input),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"topic\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'type\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"input\", options))));\n      data.buffer.push(\"\\n\\n	<label>Summary</label>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"summary\"),\n        \'class\': (\"summary\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\",\'class\': \"STRING\"},hashContexts:{\'type\': depth0,\'value\': depth0,\'class\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n\\n	<label>Entry</label>\\n	\");\n      data.buffer.push(escapeExpression((helper = helpers.textarea || (depth0 && depth0.textarea),options={hash:{\n        \'type\': (\"text\"),\n        \'value\': (\"entry\")\n      },hashTypes:{\'type\': \"STRING\",\'value\': \"ID\"},hashContexts:{\'type\': depth0,\'value\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"textarea\", options))));\n      data.buffer.push(\"\\n\\n	<button>Submit</button>\\n</form>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/posts/post-form.js");

;eval("define(\"know-dougall/templates/posts/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      var buffer = \'\', stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;\n\n\n      data.buffer.push(\"<h1 class=\'post title\'>\");\n      stack1 = helpers._triageMustache.call(depth0, \"title\", {hash:{},hashTypes:{},hashContexts:{},contexts:[depth0],types:[\"ID\"],data:data});\n      if(stack1 || stack1 === 0) { data.buffer.push(stack1); }\n      data.buffer.push(\"</h1>\\n\");\n      data.buffer.push(escapeExpression((helper = helpers[\'time-formatter\'] || (depth0 && depth0[\'time-formatter\']),options={hash:{\n        \'time\': (\"createdAt\")\n      },hashTypes:{\'time\': \"ID\"},hashContexts:{\'time\': depth0},contexts:[],types:[],data:data},helper ? helper.call(depth0, options) : helperMissing.call(depth0, \"time-formatter\", options))));\n      data.buffer.push(\"\\n<div class=\'entry\'>\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"formattedEntry\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"</div>\\n\\n<div class=\'posts-right-sidebar\'>\\n\");\n      data.buffer.push(escapeExpression(helpers._triageMustache.call(depth0, \"currentAnnotation.formattedEntry\", {hash:{\n        \'unescaped\': (\"true\")\n      },hashTypes:{\'unescaped\': \"STRING\"},hashContexts:{\'unescaped\': depth0},contexts:[depth0],types:[\"ID\"],data:data})));\n      data.buffer.push(\"\\n</div>\");\n      return buffer;\n      \n    });\n  });//# sourceURL=know-dougall/templates/posts/show.js");

;eval("define(\"know-dougall/templates/right-sidebar\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n    __exports__[\"default\"] = Ember.Handlebars.template(function anonymous(Handlebars,depth0,helpers,partials,data) {\n    this.compilerInfo = [4,\'>= 1.0.0\'];\n    helpers = this.merge(helpers, Ember.Handlebars.helpers); data = data || {};\n      \n\n\n      data.buffer.push(\"<h3>Right Sidebar</h3>\");\n      \n    });\n  });//# sourceURL=know-dougall/templates/right-sidebar.js");

;eval("define(\"know-dougall/tests/helpers/resolver\", \n  [\"ember/resolver\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Resolver = __dependency1__[\"default\"];\n\n    var resolver = Resolver.create();\n\n    resolver.namespace = {\n      modulePrefix: \'know-dougall\'\n    };\n\n    __exports__[\"default\"] = resolver;\n  });//# sourceURL=know-dougall/tests/helpers/resolver.js");

;eval("define(\"know-dougall/tests/helpers/start-app\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    /* global require */\n\n    var Application = require(\'know-dougall/app\')[\'default\'];\n    var Router = require(\'know-dougall/router\')[\'default\'];\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = function startApp(attrs) {\n      var App;\n\n      var attributes = Ember.merge({\n        // useful Test defaults\n        rootElement: \'#ember-testing\',\n        LOG_ACTIVE_GENERATION:false,\n        LOG_VIEW_LOOKUPS: false\n      }, attrs); // but you can override;\n\n      Router.reopen({\n        location: \'none\'\n      });\n\n      Ember.run(function(){\n        App = Application.create(attributes);\n        App.setupForTesting();\n        App.injectTestHelpers();\n      });\n\n      App.reset(); // this shouldn\'t be needed, i want to be able to \"start an app at a specific URL\"\n\n      return App;\n    }\n  });//# sourceURL=know-dougall/tests/helpers/start-app.js");

;eval("define(\"know-dougall/tests/know-dougall/adapters/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/adapters\');\n    test(\'know-dougall/adapters/application.js should pass jshint\', function() { \n      ok(true, \'know-dougall/adapters/application.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/adapters/application.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/adapters/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/adapters\');\n    test(\'know-dougall/adapters/user.js should pass jshint\', function() { \n      ok(true, \'know-dougall/adapters/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/adapters/user.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall\');\n    test(\'know-dougall/app.js should pass jshint\', function() { \n      ok(true, \'know-dougall/app.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/app.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/copyable-text.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/copyable-text.js should pass jshint\', function() { \n      ok(false, \'know-dougall/components/copyable-text.js should pass jshint.\\nknow-dougall/components/copyable-text.js: line 12, col 25, Missing semicolon.\\nknow-dougall/components/copyable-text.js: line 24, col 26, \\\'ZeroClipboard\\\' is not defined.\\nknow-dougall/components/copyable-text.js: line 26, col 39, \\\'readyEvent\\\' is defined but never used.\\nknow-dougall/components/copyable-text.js: line 28, col 45, \\\'event\\\' is defined but never used.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/copyable-text.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/friends-graph.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/friends-graph.js should pass jshint\', function() { \n      ok(false, \'know-dougall/components/friends-graph.js should pass jshint.\\nknow-dougall/components/friends-graph.js: line 18, col 21, Missing semicolon.\\nknow-dougall/components/friends-graph.js: line 23, col 59, Missing semicolon.\\nknow-dougall/components/friends-graph.js: line 28, col 77, Missing semicolon.\\nknow-dougall/components/friends-graph.js: line 49, col 27, Missing semicolon.\\nknow-dougall/components/friends-graph.js: line 61, col 73, Missing semicolon.\\nknow-dougall/components/friends-graph.js: line 90, col 64, Missing semicolon.\\nknow-dougall/components/friends-graph.js: line 28, col 16, \\\'d3\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 33, col 16, \\\'d3\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 52, col 29, \\\'d3\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 56, col 21, \\\'d3\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 66, col 19, \\\'d3\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 123, col 5, \\\'d3\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 130, col 7, \\\'d3\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 136, col 18, \\\'$\\\' is not defined.\\nknow-dougall/components/friends-graph.js: line 45, col 13, \\\'root\\\' is defined but never used.\\nknow-dougall/components/friends-graph.js: line 46, col 13, \\\'user\\\' is defined but never used.\\nknow-dougall/components/friends-graph.js: line 47, col 13, \\\'users\\\' is defined but never used.\\nknow-dougall/components/friends-graph.js: line 119, col 49, \\\'allNodes\\\' is defined but never used.\\nknow-dougall/components/friends-graph.js: line 128, col 48, \\\'allNodes\\\' is defined but never used.\\n\\n19 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/friends-graph.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/hoverable-element.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/hoverable-element.js should pass jshint\', function() { \n      ok(true, \'know-dougall/components/hoverable-element.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/hoverable-element.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/linkedin-login.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/linkedin-login.js should pass jshint\', function() { \n      ok(true, \'know-dougall/components/linkedin-login.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/linkedin-login.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/menu-bar.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/menu-bar.js should pass jshint\', function() { \n      ok(false, \'know-dougall/components/menu-bar.js should pass jshint.\\nknow-dougall/components/menu-bar.js: line 11, col 77, Missing semicolon.\\nknow-dougall/components/menu-bar.js: line 15, col 48, Missing semicolon.\\nknow-dougall/components/menu-bar.js: line 16, col 78, Missing semicolon.\\nknow-dougall/components/menu-bar.js: line 8, col 18, \\\'$\\\' is not defined.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/menu-bar.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/new-annotation.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/new-annotation.js should pass jshint\', function() { \n      ok(true, \'know-dougall/components/new-annotation.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/new-annotation.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/personal-logo.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/personal-logo.js should pass jshint\', function() { \n      ok(true, \'know-dougall/components/personal-logo.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/personal-logo.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/post-display.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/post-display.js should pass jshint\', function() { \n      ok(true, \'know-dougall/components/post-display.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/post-display.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/show-annotation.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/show-annotation.js should pass jshint\', function() { \n      ok(true, \'know-dougall/components/show-annotation.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/show-annotation.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/components/time-formatter.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/components\');\n    test(\'know-dougall/components/time-formatter.js should pass jshint\', function() { \n      ok(false, \'know-dougall/components/time-formatter.js should pass jshint.\\nknow-dougall/components/time-formatter.js: line 6, col 36, Missing semicolon.\\nknow-dougall/components/time-formatter.js: line 7, col 51, Missing semicolon.\\nknow-dougall/components/time-formatter.js: line 7, col 16, \\\'moment\\\' is not defined.\\n\\n3 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/components/time-formatter.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers\');\n    test(\'know-dougall/controllers/application.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/application.js should pass jshint.\\nknow-dougall/controllers/application.js: line 7, col 68, Missing semicolon.\\nknow-dougall/controllers/application.js: line 8, col 76, Missing semicolon.\\nknow-dougall/controllers/application.js: line 15, col 27, Missing semicolon.\\nknow-dougall/controllers/application.js: line 17, col 53, Missing semicolon.\\n\\n4 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/application.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/friends-graph.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers\');\n    test(\'know-dougall/controllers/friends-graph.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/friends-graph.js should pass jshint.\\nknow-dougall/controllers/friends-graph.js: line 11, col 35, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/friends-graph.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/friends-graph/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers/friends-graph\');\n    test(\'know-dougall/controllers/friends-graph/index.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/friends-graph/index.js should pass jshint.\\nknow-dougall/controllers/friends-graph/index.js: line 13, col 10, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/friends-graph/index.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/friends-graph/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers/friends-graph\');\n    test(\'know-dougall/controllers/friends-graph/show.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/friends-graph/show.js should pass jshint.\\nknow-dougall/controllers/friends-graph/show.js: line 17, col 10, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/friends-graph/show.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/posts.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers\');\n    test(\'know-dougall/controllers/posts.js should pass jshint\', function() { \n      ok(true, \'know-dougall/controllers/posts.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/posts.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/posts/edit.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers/posts\');\n    test(\'know-dougall/controllers/posts/edit.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/posts/edit.js should pass jshint.\\nknow-dougall/controllers/posts/edit.js: line 17, col 10, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/posts/edit.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/posts/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers/posts\');\n    test(\'know-dougall/controllers/posts/index.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/posts/index.js should pass jshint.\\nknow-dougall/controllers/posts/index.js: line 18, col 10, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/posts/index.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/posts/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers/posts\');\n    test(\'know-dougall/controllers/posts/new.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/posts/new.js should pass jshint.\\nknow-dougall/controllers/posts/new.js: line 15, col 10, Missing semicolon.\\nknow-dougall/controllers/posts/new.js: line 26, col 29, Missing semicolon.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/posts/new.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/controllers/posts/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/controllers/posts\');\n    test(\'know-dougall/controllers/posts/show.js should pass jshint\', function() { \n      ok(false, \'know-dougall/controllers/posts/show.js should pass jshint.\\nknow-dougall/controllers/posts/show.js: line 23, col 10, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/controllers/posts/show.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/models/annotation.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/models\');\n    test(\'know-dougall/models/annotation.js should pass jshint\', function() { \n      ok(false, \'know-dougall/models/annotation.js should pass jshint.\\nknow-dougall/models/annotation.js: line 10, col 78, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/models/annotation.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/models/connected-user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/models\');\n    test(\'know-dougall/models/connected-user.js should pass jshint\', function() { \n      ok(true, \'know-dougall/models/connected-user.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/models/connected-user.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/models/post.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/models\');\n    test(\'know-dougall/models/post.js should pass jshint\', function() { \n      ok(true, \'know-dougall/models/post.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/models/post.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/models/user.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/models\');\n    test(\'know-dougall/models/user.js should pass jshint\', function() { \n      ok(true, \'know-dougall/models/user.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/models/user.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/router.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall\');\n    test(\'know-dougall/router.js should pass jshint\', function() { \n      ok(true, \'know-dougall/router.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/router.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/routes/application.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/routes\');\n    test(\'know-dougall/routes/application.js should pass jshint\', function() { \n      ok(false, \'know-dougall/routes/application.js should pass jshint.\\nknow-dougall/routes/application.js: line 7, col 13, \\\'$\\\' is not defined.\\nknow-dougall/routes/application.js: line 10, col 13, \\\'$\\\' is not defined.\\n\\n2 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/routes/application.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/routes/friends-graph.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/routes\');\n    test(\'know-dougall/routes/friends-graph.js should pass jshint\', function() { \n      ok(false, \'know-dougall/routes/friends-graph.js should pass jshint.\\nknow-dougall/routes/friends-graph.js: line 5, col 42, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/routes/friends-graph.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/routes/friends-graph/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/routes/friends-graph\');\n    test(\'know-dougall/routes/friends-graph/show.js should pass jshint\', function() { \n      ok(false, \'know-dougall/routes/friends-graph/show.js should pass jshint.\\nknow-dougall/routes/friends-graph/show.js: line 5, col 59, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/routes/friends-graph/show.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/routes/posts.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/routes\');\n    test(\'know-dougall/routes/posts.js should pass jshint\', function() { \n      ok(true, \'know-dougall/routes/posts.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/routes/posts.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/routes/posts/index.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/routes/posts\');\n    test(\'know-dougall/routes/posts/index.js should pass jshint\', function() { \n      ok(false, \'know-dougall/routes/posts/index.js should pass jshint.\\nknow-dougall/routes/posts/index.js: line 11, col 50, Missing semicolon.\\n\\n1 error\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/routes/posts/index.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/routes/posts/new.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/routes/posts\');\n    test(\'know-dougall/routes/posts/new.js should pass jshint\', function() { \n      ok(true, \'know-dougall/routes/posts/new.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/routes/posts/new.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/helpers/resolver.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/helpers\');\n    test(\'know-dougall/tests/helpers/resolver.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/helpers/resolver.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/helpers/resolver.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/helpers/start-app.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/helpers\');\n    test(\'know-dougall/tests/helpers/start-app.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/helpers/start-app.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/helpers/start-app.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/test-helper.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests\');\n    test(\'know-dougall/tests/test-helper.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/test-helper.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/test-helper.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/copyable-text-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/copyable-text-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/copyable-text-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/copyable-text-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/hoverable-element-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/hoverable-element-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/hoverable-element-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/hoverable-element-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/linkein-login-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/linkein-login-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/linkein-login-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/linkein-login-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/menu-bar-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/menu-bar-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/menu-bar-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/menu-bar-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/new-annotation-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/new-annotation-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/new-annotation-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/new-annotation-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/personal-logo-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/personal-logo-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/personal-logo-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/personal-logo-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/post-display-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/post-display-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/post-display-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/post-display-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/show-annotation-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/show-annotation-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/show-annotation-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/show-annotation-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/components/time-formatter-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/components\');\n    test(\'know-dougall/tests/unit/components/time-formatter-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/components/time-formatter-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/components/time-formatter-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers\');\n    test(\'know-dougall/tests/unit/controllers/application-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/application-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/friends-graph-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers\');\n    test(\'know-dougall/tests/unit/controllers/friends-graph-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/friends-graph-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/friends-graph-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/friends-graph/index-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers/friends-graph\');\n    test(\'know-dougall/tests/unit/controllers/friends-graph/index-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/friends-graph/index-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/friends-graph/index-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/friends-graph/show-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers/friends-graph\');\n    test(\'know-dougall/tests/unit/controllers/friends-graph/show-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/friends-graph/show-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/friends-graph/show-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/posts-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers\');\n    test(\'know-dougall/tests/unit/controllers/posts-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/posts-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/posts-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/posts/edit-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers/posts\');\n    test(\'know-dougall/tests/unit/controllers/posts/edit-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/posts/edit-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/posts/edit-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/posts/new-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers/posts\');\n    test(\'know-dougall/tests/unit/controllers/posts/new-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/posts/new-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/posts/new-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/controllers/posts/show-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/controllers/posts\');\n    test(\'know-dougall/tests/unit/controllers/posts/show-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/controllers/posts/show-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/controllers/posts/show-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/models/annotation-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/models\');\n    test(\'know-dougall/tests/unit/models/annotation-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/models/annotation-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/models/annotation-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/models/connected-user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/models\');\n    test(\'know-dougall/tests/unit/models/connected-user-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/models/connected-user-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/models/connected-user-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/models/user-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/models\');\n    test(\'know-dougall/tests/unit/models/user-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/models/user-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/models/user-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/routes/application-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/routes\');\n    test(\'know-dougall/tests/unit/routes/application-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/routes/application-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/routes/application-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/routes/friends-graph-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/routes\');\n    test(\'know-dougall/tests/unit/routes/friends-graph-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/routes/friends-graph-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/routes/friends-graph-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/routes/friends-graph/show-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/routes/friends-graph\');\n    test(\'know-dougall/tests/unit/routes/friends-graph/show-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/routes/friends-graph/show-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/routes/friends-graph/show-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/routes/posts-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/routes\');\n    test(\'know-dougall/tests/unit/routes/posts-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/routes/posts-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/routes/posts-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/tests/unit/views/posts/show-test.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/tests/unit/views/posts\');\n    test(\'know-dougall/tests/unit/views/posts/show-test.js should pass jshint\', function() { \n      ok(true, \'know-dougall/tests/unit/views/posts/show-test.js should pass jshint.\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/tests/unit/views/posts/show-test.jshint.js");

;eval("define(\"know-dougall/tests/know-dougall/views/posts/show.jshint\", \n  [],\n  function() {\n    \"use strict\";\n    module(\'JSHint - know-dougall/views/posts\');\n    test(\'know-dougall/views/posts/show.js should pass jshint\', function() { \n      ok(false, \'know-dougall/views/posts/show.js should pass jshint.\\nknow-dougall/views/posts/show.js: line 6, col 25, Missing semicolon.\\nknow-dougall/views/posts/show.js: line 7, col 9, \\\'$\\\' is not defined.\\nknow-dougall/views/posts/show.js: line 8, col 22, \\\'$\\\' is not defined.\\n\\n3 errors\'); \n    });\n  });//# sourceURL=know-dougall/tests/know-dougall/views/posts/show.jshint.js");

;eval("define(\"know-dougall/tests/test-helper\", \n  [\"know-dougall/tests/helpers/resolver\",\"ember-qunit\"],\n  function(__dependency1__, __dependency2__) {\n    \"use strict\";\n    var resolver = __dependency1__[\"default\"];\n    var setResolver = __dependency2__.setResolver;\n\n    setResolver(resolver);\n\n    document.write(\'<div id=\"ember-testing-container\"><div id=\"ember-testing\"></div></div>\');\n  });//# sourceURL=know-dougall/tests/test-helper.js");

;eval("define(\"know-dougall/tests/unit/components/copyable-text-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'copyable-text\', \'CopyableTextComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/copyable-text-test.js");

;eval("define(\"know-dougall/tests/unit/components/hoverable-element-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'hoverable-element\', \'HoverableElementComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/hoverable-element-test.js");

;eval("define(\"know-dougall/tests/unit/components/linkein-login-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'linkein-login\', \'LinkeinLoginComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/linkein-login-test.js");

;eval("define(\"know-dougall/tests/unit/components/menu-bar-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'menu-bar\', \'MenuBarComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/menu-bar-test.js");

;eval("define(\"know-dougall/tests/unit/components/new-annotation-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'new-annotation\', \'NewAnnotationComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/new-annotation-test.js");

;eval("define(\"know-dougall/tests/unit/components/personal-logo-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'personal-logo\', \'PersonalLogoComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/personal-logo-test.js");

;eval("define(\"know-dougall/tests/unit/components/post-display-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'post-display\', \'PostDisplayComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/post-display-test.js");

;eval("define(\"know-dougall/tests/unit/components/show-annotation-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'show-annotation\', \'ShowAnnotationComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/show-annotation-test.js");

;eval("define(\"know-dougall/tests/unit/components/time-formatter-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForComponent = __dependency1__.moduleForComponent;\n\n    moduleForComponent(\'time-formatter\', \'TimeFormatterComponent\', {\n      // specify the other units that are required for this test\n      // needs: [\'component:foo\', \'helper:bar\']\n    });\n\n    test(\'it renders\', function() {\n      expect(2);\n\n      // creates the component instance\n      var component = this.subject();\n      equal(component.state, \'preRender\');\n\n      // appends the component to the page\n      this.append();\n      equal(component.state, \'inDOM\');\n    });\n  });//# sourceURL=know-dougall/tests/unit/components/time-formatter-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:application\', \'ApplicationController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/application-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/friends-graph-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:friends-graph\', \'FriendsGraphController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/friends-graph-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/friends-graph/index-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:friends-graph/index\', \'FriendsGraphIndexController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/friends-graph/index-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/friends-graph/show-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:friends-graph/show\', \'FriendsGraphShowController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/friends-graph/show-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/posts-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:posts\', \'PostsController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/posts-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/posts/edit-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:posts/edit\', \'PostsEditController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/posts/edit-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/posts/new-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:posts/new\', \'PostsNewController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/posts/new-test.js");

;eval("define(\"know-dougall/tests/unit/controllers/posts/show-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'controller:posts/show\', \'PostsShowController\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var controller = this.subject();\n      ok(controller);\n    });\n  });//# sourceURL=know-dougall/tests/unit/controllers/posts/show-test.js");

;eval("define(\"know-dougall/tests/unit/models/annotation-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n\n    moduleForModel(\'annotation\', \'Annotation\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(model);\n    });\n  });//# sourceURL=know-dougall/tests/unit/models/annotation-test.js");

;eval("define(\"know-dougall/tests/unit/models/connected-user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n\n    moduleForModel(\'connected-user\', \'ConnectedUser\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(model);\n    });\n  });//# sourceURL=know-dougall/tests/unit/models/connected-user-test.js");

;eval("define(\"know-dougall/tests/unit/models/user-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleForModel = __dependency1__.moduleForModel;\n\n    moduleForModel(\'user\', \'User\', {\n      // Specify the other units that are required for this test.\n      needs: []\n    });\n\n    test(\'it exists\', function() {\n      var model = this.subject();\n      // var store = this.store();\n      ok(model);\n    });\n  });//# sourceURL=know-dougall/tests/unit/models/user-test.js");

;eval("define(\"know-dougall/tests/unit/routes/application-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:application\', \'ApplicationRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=know-dougall/tests/unit/routes/application-test.js");

;eval("define(\"know-dougall/tests/unit/routes/friends-graph-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:friends-graph\', \'FriendsGraphRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=know-dougall/tests/unit/routes/friends-graph-test.js");

;eval("define(\"know-dougall/tests/unit/routes/friends-graph/show-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:friends-graph/show\', \'FriendsGraphShowRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=know-dougall/tests/unit/routes/friends-graph/show-test.js");

;eval("define(\"know-dougall/tests/unit/routes/posts-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'route:posts\', \'PostsRoute\', {\n      // Specify the other units that are required for this test.\n      // needs: [\'controller:foo\']\n    });\n\n    test(\'it exists\', function() {\n      var route = this.subject();\n      ok(route);\n    });\n  });//# sourceURL=know-dougall/tests/unit/routes/posts-test.js");

;eval("define(\"know-dougall/tests/unit/views/posts/show-test\", \n  [\"ember-qunit\"],\n  function(__dependency1__) {\n    \"use strict\";\n    var test = __dependency1__.test;\n    var moduleFor = __dependency1__.moduleFor;\n\n    moduleFor(\'view:posts/show\', \'PostsShowView\');\n\n    // Replace this with your real tests.\n    test(\'it exists\', function() {\n      var view = this.subject();\n      ok(view);\n    });\n  });//# sourceURL=know-dougall/tests/unit/views/posts/show-test.js");

;eval("define(\"know-dougall/views/posts/show\", \n  [\"ember\",\"exports\"],\n  function(__dependency1__, __exports__) {\n    \"use strict\";\n    var Ember = __dependency1__[\"default\"];\n\n    __exports__[\"default\"] = Ember.View.extend({\n\n    	didInsertElement: function () {\n    		var _this = this\n    		$(\'.annotation-link\').on(\'click\', function () {\n    			var id = $(this).data(\'annotation-id\');\n    			_this.get(\"controller\").send(\'showAnnotation\', id);\n    		});\n    	}\n\n    });\n  });//# sourceURL=know-dougall/views/posts/show.js");
